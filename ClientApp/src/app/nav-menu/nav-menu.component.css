li .glyphicon {
    margin-right: 10px;
}
/* Highlighting rules for nav menu items */
li.link-active a, li.link-active a:hover, li.link-active a:focus {
    background-color: #4189C7;
    color: white;
}
Keep the nav menu independent of scrolling and on top of other items .main-nav {
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    z-index: 1;
}
@media (min-width: 768px) {
   /* On small screens, convert the nav menu to a vertical sidebar */
    .main-nav {
        height: 100%;
        width: calc(25% - 20px);
   }
    .navbar {
        border-radius: 0px;
        border-width: 0px;
        height: 100%;
   }
    .navbar-header {
        float: none;
   }
    .navbar-collapse {
        border-top: 1px solid #444;
        padding: 0px;
   }
    .navbar ul {
        float: none;
   }
    .navbar li {
        float: none;
        font-size: 15px;
        margin: 6px;
   }
    .navbar li a {
        padding: 10px 16px;
        border-radius: 4px;
   }
    .navbar a {
       /* If a menu item's text is too long, truncate it */
        width: 100%;
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
   }
}
.nav-button {
    float:left;
    margin-left:1% 
}
.example-container {
    display: flex;
    flex-direction: column;
    position: absolute;
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
}
.example-is-mobile .example-toolbar {
    position: fixed;
   /* Make sure the toolbar will stay on top of the content as it scrolls past. */
    z-index: 2;
}
h1.example-app-name {
    margin-left: 8px;
}
.example-sidenav-container {
   /* When the sidenav is not fixed, stretch the sidenav container to fill the available space. This causes `<mat-sidenav-content>` to act as our scrolling element for desktop layouts. */
    flex: 1;
}
.example-is-mobile .example-sidenav-container {
   /* When the sidenav is fixed, don't constrain the height of the sidenav container. This allows the `<body>` to be our scrolling element for mobile layouts. */
    flex: 1 0 auto;
}
